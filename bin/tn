#! /bin/bash

function die()
{
	echo $*
	exit 1
}

confdir=${XDG_CACHE_HOME:-$HOME/.config}/tn
boxlist=$confdir/box
addr=ip
box=
boxdir=$confdir
curbox=$boxdir/current
mode=${0##*/}
use_ip=
multiarg=

if [ "$mode" = "tn" ]; then
    case $1 in
    cmd2k|snmpget|snmpwalk|set|getfile)
	mode=$1
	shift
	;;
    esac
fi

case $mode in
    set) ;;

    tn)
	use_ip=yes;
	addr=ip;;

    cmd2k|snmpget|snmpwalk|getfile)
	multiarg=yes
	use_ip=yes
	addr=ip;;

    sling)
	addr=$mode;;

    *)
	die "unknown sub command: $mode";;
esac


while test $# -ne 0; do
	i=$1

	case $i in
	-rf) [ -n "$use_ip" ] && addr=rf;;
	-ip) [ -n "$use_ip" ] && addr=ip;;
	-sling) [ -z "$use_ip" ] && addr=sling;;
	-*) die "unknosn option $i";;
	@*) box=${i:1};;
	*) [ -n "$multiarg" ] || die "Extra arguments: $i"; break;
	esac

	shift
done

#read box info
newbox=$boxdir/$box

if [ -z "$box" ]; then
    if [ -f "$curbox" ]; then
	box=$(cat "$curbox")
    else
	die "No box specified"
    fi
fi

boxes=$(cat "$boxlist")
while IFS=':' read -ra BOX; do
    name=${BOX[0]}
    case $name in
    \#*)
	;;

    $box)
	if [ "$found" != "yes" ]; then
		found=yes
		ip=${BOX[1]}
		rf=${BOX[2]}
		sling=${BOX[3]}
	fi
	;;
    esac
done <<< "$boxes"

if [ "$found" != "yes" ]; then
    die "Box '$box' is not found in $boxlist"
fi

echo "$box" > "$curbox"
echo "Using box: $box"

addr=${!addr}
[ -n "$addr" ] || die "Address for $mode is not defined"
echo "Address: $addr($mode)"

case "$mode" in 
    sling)
	;;

    cmd2k)
	cmd2000 $addr "$*" 2>/dev/null # | cut -b46-
	;;

    tn)
	ping -w90 -c1 $addr || die "Unabe to ping box"
	sleep 0.5
//	exec telnet $addr
	expect \
	    -c "spawn telnet $addr" \
	    -c 'expect "*?login:*"' \
	    -c 'send "root\r"' \
	    -c 'expect -re *[$#] "' \
	    -c 'interact' \
	;;

    snmpwalk)
	snmpwalk -v 2c -c CvC0ms $addr:161 $*
	;;

    snmpget)
	snmpget -v 2c -c CvC0ms $addr:161 $*
	;;

    set);;

    getfile)
	for i in "$*"; do
	    file=$i
	    out=${file##*/}.rmt

	    expect \
	        -c "spawn telnet $addr" \
	        -c 'expect "*?login:*"' \
	        -c 'send "root\r"' \
	        -c 'expect "*9$#] "' \
		-c 'send "stty -echo\r"' \
	        -c 'expect "*[$#] "' \
	        -c "send \"[ -f $file ] && (echo BEGIN;hexdump -ve \'/1 \\\"%02X\\\"\' $file;echo;echo END)\r\"" \
	        -c 'expect "*[$#] "' \
		| awk '/END/{p=0;} { if (p) print $0; } /BEGIN/ {p=1;}; ' \
	        | xxd -r -p - "$out"

	done
	;;
esac

