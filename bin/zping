#!/usr/bin/expect -f

set port telnet
set wait 1000
set time 5000

set myargs $argv
while {[llength $myargs]} {
    set myargs [lassign $myargs arg]
    if {[string equal -length 2 "--" "$arg"]} {
		# Option
		switch -exact -- [string range $arg 2 end] {
			verbose {set ::verbose 1}
			time    {set myargs [lassign $myargs ::time]}
			wait    {set myargs [lassign $myargs ::wait]}
			help    {
				puts "zping \[-wait <msec>] <host>\[:<port>]"
				exit 0
			}
		}
	} else {
		set server $arg
	}
}

# default exit status is error
set status 1

if [regexp {(.*):(.*)} $server matched host port] {

} else {
	set host $server
	set port telnet
}


# progress mark
set phases {- / | \\}
proc ascii_animate _var {
    upvar 1 $_var var
    if {[llength $var] != 0 } {
	    puts -nonewline \b[lindex $var 0]
	    flush stdout
	    set var [concat [lrange $var 1 end] [lindex $var 0]]
	    after 500 [list ascii_animate $_var ]
    }
}

proc stop_animate {_var msg} {
    upvar 1 $_var var
    set var [list]
    puts "\b \b$msg"
}

puts -nonewline "connect to $host via $port...  "
ascii_animate phases

after $time { stop_animate phases "failed to connect"; exit 1 }

while {$status == 1} {
    # open non-blocking socket
    set s [socket -async $host $port]
    fconfigure $s -blocking 0

    # when connected update status
    fileevent $s writable [list set status 0]

    # wait some time otherwise
    after $wait set status 1
    vwait status

#    catch {close $s}

    close $s
    if {$status == 0} {
	stop_animate phases "ok"
    }
}

exit $status
