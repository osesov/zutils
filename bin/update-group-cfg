#! /bin/bash

input_file=$1
search=${2:-*://}
replace=${3:-.}
new_group=

# read group config
first_line=yes
while read line; do
#    echo "[$line]"

    OIFS=$IFS
    IFS=';'
    arr=$line
    num=0
    for x in $arr; do
#        echo "> [$x]"
	data[$((num++))]=$x
    done

    IFS=$OIFS

    index=0
    if [ x$first_line == xyes ]; then
	for x in ${!data[@]}; do
#	    echo ${data[$x]} "->" $x

	    case "${data[$x]}" in
	    command) command_field=$x;;
	    name)    url_field=$x;;
	    version) version_field=$x;;
	    size)    size_field=$x;;
	    esac
	done
	first_line=no
    else
	command=${data[$command_field]}

	case "$command" in
	app|lib|file|svc)
		url=${data[$url_field]}
		version=${data[$version_field]}
		file=${url/"$search"/"$replace"}
#		echo "${file}"
#		eval file=$replace${url%${search}}
#		file=$( awk 'BEGIN {u="'$url'"; sub("'$search'", "'$replace'", u); print u}' )
#		echo $file
#		echo "url: $url"
#		echo "version: $version"
#		echo "file: $file"

		if [ -n "$version_field" ]; then
			version=$(sha1sum $file | cut -d ' ' -f1 )
			if [ $? != 0 ]; then
			    echo "Err"
			    exit 1
			fi
#			echo "ver: $version_field -- $version"
			data[$version_field]=$version
		fi

		if [ -n "$size_field" ]; then
			size=$( ls -l $file | cut -d ' ' -f5 )
			data[$size_field]=$size
#			echo "size: $size_field -- $size:${data[$size_field]}"
		fi

		line=""
	    	for x in ${!data[@]}; do
		    line="$line${data[$x]};"
		done
	    ;;
	esac
    fi
    new_group="$new_group$line
"
done < <( cat $input_file )

echo -ne "$new_group" > $input_file
